<os:ConfigurationRegistry xmlns:os="http://schemas.objectivity.com/objy/configuration/registry" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schemas.objectivity.com/objy/configuration/registry ConfigurationRegistry.xsd">
  <Enumerations>
    <Enumeration id="indexLevel">
      <Value label="scope"/>
      <Value label="partition"/>
      <Value label="group"/>
      <Value label="container"/>
    </Enumeration>
    <Enumeration id="outputFormat">
      <Value label="text"/>
      <Value label="xml"/>
    </Enumeration>
  </Enumerations>
  <Parameters>
    <Parameter id="allmodels" name="allModels" type="bool"
               description="If true, adds all models found in the federated database; otherwise, adds only the Application model."/>
    <Parameter id="allversions" name="allVersions" type="bool"
               description="Includes all versions. If omitted, includes only the latest version."/>
    <Parameter id="providesuggestions" name="provideSuggestions" type="bool"
               description="Adds suggested rules and object placers to the generated PMD, based on the federated database's schema."/>
    <Parameter id="predicate" name="predicate" type="string" valueName="predicate"
               description="Predicate string expressing qualifying conditions."/>
    <Parameter id="includeUnavailable" name="includeUnavailable" type="bool"
               description="Include storage locations that are currently unavailable because they are full."/>
    <Parameter id="dbPlacer" name="dbPlacer" type="string" valueName="dbPlacerName"
               description="Database placer defined in the federated database's placement model."/>
    <Parameter id="dbPlacerGroup" name="dbPlacerGroup" type="string" valueName="groupDesignation"
               description="Database-placer name and group designation in the form dbPlacerName[::partitionNumber][::groupNumber]. For example, accounts::3 or observations::2::2"/>
    <Parameter id="mainStorageGroup" name="mainStorageGroup" type="bool"
               description="Main storage group (MSG)."/>
    <Parameter id="attribute" name="attribute" type="string" valueName="fieldName"
               description="Attribute to be used as a key field for sorting indexed objects. If fieldName designates an attribute with string values, you can specify the maximum stored string length in the form fieldName:maxStringLen (for example, name:20)."/>
    <Parameter id="type" name="type" type="string" valueName="indexType"
               description="Type of index structure to be used. If omitted, the type is &quot;traditional&quot;, which indicates a B+ tree compound index structure."/>
    <Parameter id="keySpecification" name="keySpecification" type="string" valueName="keySpec"
               description="Name of the key specification identifying the class and key field(s) of the objects to be indexed."/>   
    <Parameter id="isUnique" name="isUnique" type="bool"
               description="Requires indexes based on the specification to have unique keys. If omitted, allows duplicate keys."/>    
    <Parameter id="objectPlacer" name="objectPlacer" type="string" valueName="placerName"
               description="Name of an object placer defined in the placement model."/>
    <Parameter id="level" name="level" type="enum" enumType="indexLevel" valueName="indexLevel"
               description="Level (container, group, partition, or scope) that each index spans. The indexLevel does not affect which objects are indexed, but rather determines whether these objects are indexed using a set of container-level indexes, a set of group-level indexes, a set of partition-level indexes, or a single scope-level index."/>
    <Parameter id="addDisabled" name="addDisabled" type="bool"
               description="If true, adds the index specification without creating any index structure(s); a subsequent use of AddIndex is required to create them."/>
    <Parameter id="indexSpecification" name="indexSpecification" type="string" valueName="indexSpec"
                description="Name of the index specification on which to base the added index(es)."/>
    <Parameter id="outputFormat" name="outputFormat" type="enum" enumType="outputFormat" valueName="format"
               description="Format (text or xml) for the list output. If omitted, the format is &quot;text&quot;."/>
    <Parameter id="count" name="count" type="uint" valueName="count"
               description="Number of containers to create."/>
    <Parameter id="group" name="group" type="string" valueName="groupDesignation"
               description="Group to which to add containers, designated in the form objectPlacer[::partitionNumber][::groupNumber]. For example, accounts::3 or observations::2::2"/>

    <Parameter id="nowhitespace" name="noWhiteSpace" type="bool" default="false" 
               description="Does not include white space in the output, making it smaller, but less readable."/>
    <Parameter id="shortnames" name="shortNames" type="bool" default="false"
               description="Uses short names for elements and attributes, making the output smaller, but less readable."/>
    <Parameter id="verbose" name="verbose" type="bool" default="false"
               description="Includes additional detail in the output."/>
    <Parameter id="compress" name="compress" type="bool" default="false"
               description="Compresses the output."/>
    <Parameter id="maxfilesize" name="maxfilesize" type="uint" default="100"
               description="Maximum output file size in MB."/>
    <Parameter id="includesystemdefined" name="includeSystemDefined" type="bool" default="false"
               description="Exports the entire federated-database schema, including Objectivity/DB internal classes."/>

    <Parameter id="modelName" name="modelName" type="string" default="Application"
               description="Name of the model."/>
  </Parameters>
  <Groups>
    <Group id="StorageUsers" name="StorageUsers" 
           description="Storage users.">
      <ParameterRef id="zone" optional="true" unbounded="true"/>
      <ParameterRef id="dbPlacer" optional="true" unbounded="true"/>
    </Group>
  </Groups>
  <Specifications>
    <Specification id="ImportPlacement" name="Import Placement" 
                   description="Imports the specified placement model document (PMD), and installs the described placement model(s) into the federated database.">
      <ParameterRef id="infile" description="Name of the PMD file to import, optionally including a path to its directory."/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="ExportPlacement" name="Export Placement" 
                   description="Creates a placement model document (PMD) describing the placement model(s) that are currently installed in the federated database.">
      <ParameterRef id="outfile" description="Name of the PMD file to generate. The filename extension .pmd is recommended, but is not added automatically."/>
      <ParameterRef id="allmodels" optional="true" hidden="true"/>
      <ParameterRef id="allversions" optional="true" description="Includes all versions of the placement model. If omitted, includes only the latest version."/>
      <ParameterRef id="providesuggestions" optional="true" hidden="true"/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="ModelToDot" name="Model To Dot" 
                   description="Creates GraphViz DOT file(s) that represents installed models.">
      <ParameterRef id="outdir" />
      <ParameterRef id="allmodels" optional="true"/>
      <ParameterRef id="allversions" optional="true" />
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="QueryToDot" name="Query To Dot" 
                   description="Creates GraphViz DOT files that represent the specified query and the query plan that would be used.">
      <ParameterRef id="class"/>
      <ParameterRef id="predicate"/>
      <ParameterRef id="outdir"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="ListStorage" name="List Storage" 
                   description="Lists the storage locations and zones that are currently registered in the federated database's main storage group (MSG).">
      <ParameterRef id="includeUnavailable" optional="true"/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="AddStorageLocation" name="Add Storage Location" 
                   description="Adds a storage location to the federated database's main storage group (MSG), and, optionally, to one or more storage zones or database-placer groups.">
      <ParameterRef id="name" optional="true" unbounded="true"/>
      <ParameterRef id="description" optional="true" default=""/>
      <ParameterRef id="storageLocation" unbounded="true" optional="true"/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <ParameterRef id="zone" optional="true" unbounded="true" description="Storage zone to which to add the storage location. If the MSG does not already have a zone with the specified name, the zone is created."/>
      <ParameterRef id="dbPlacerGroup" optional="true" unbounded="true" description="Database-placer group to which to add the storage location. The format is dbPlacerName[::partitionNumber][::groupNumber] -- for example, accounts::3 or observations::2::2. A definition for dbPlacerName must already exist in the federated database's placement model."/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="RemoveStorageLocation" name="Remove Storage Location" 
                   description="Removes a storage location from one or more specified zones and database-placer groups, or else from the federated database's main storage group (MSG) and all its zones and groups.">
      <ParameterRef id="name" optional="true" unbounded="true"/>
      <ParameterRef id="storageLocation" unbounded="true" optional="true"/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <ParameterRef id="zone" optional="true" unbounded="true" description="Storage zone from which to remove the storage location. Omitting both -zone and -dbPlacerGroup removes the storage location from the MSG and all zones and groups."/>
      <ParameterRef id="dbPlacerGroup" optional="true" unbounded="true" description="Database-placer group from which to remove the storage location. The format is dbPlacerName[::partitionNumber][::groupNumber] -- for example, accounts::3 or observations::2::2. Omitting both -zone and -dbPlacerGroup removes the storage location from the MSG and all zones and groups."/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="InitializeScopes" name="Initialize Scopes" 
                   description="Adds the initial resources specified by the current placement model, if they have not already been added.">
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="AddKeySpecification" name="Add Key Specification" 
                   description="Adds a key specification to the federated database's placement model. A key specification can be used by one or more index specification(s) to specify the type of persistent objects to index and the key field(s) by which to sort them.">
      <ParameterRef id="name" description="Name of the key specification; must be unique within the federated database's placement model."/>
      <ParameterRef id="class" description="Class of the persistent objects to be indexed. If the class is in a namespace, specify either namespaceName.className or namespaceName::className."/>
      <ParameterRef id="attribute" unbounded="true" 
                    description="Attribute of className to be used as a key field for sorting indexed objects. If fieldName designates an attribute with string values, you can specify the maximum stored string length in the form fieldName:maxStringLen (for example, name:20). If you specify multiple -attribute options, the left-to-right order is significant, with the leftmost designating the primary sort key."/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="AddIndexSpecification" name="Add Index Specification" 
                   description="Adds an index specification to the federated database's placement model. An index specification describes the properties of a particular set of indexes that can be added to the federated database.">
      <ParameterRef id="name" description="Name of the index specification; must be unique within the federated database's placement model."/>
      <ParameterRef id="keySpecification"/>
      <ParameterRef id="type" optional="true" default="Traditional" hidden="true"/>
      <ParameterRef id="class" optional="true" default="" description="Class of the objects to be indexed; must be the class on which keySpec is based, or a subclass of that class. If the class is in a namespace, specify either namespaceName.className or namespaceName::className."/>
      <ParameterRef id="isUnique" optional="true" default="0"/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="AddIndex" name="Add Index" 
                   description="Creates one or more indexes based on a particular index specification.">
      <ParameterRef id="indexSpecification"/>
      <ParameterRef id="objectPlacer" optional="true" default="" description="Object placer that placed the persistent objects to be indexed. If omitted, all objects of the key class are indexed, regardless of the object-placer scope to which they belong."/>
      <ParameterRef id="level" optional="true" default="container" description="Level (container, group, partition, or scope) that each index spans. If omitted, container-level indexes are added. The indexLevel does not affect which objects are indexed, but rather determines whether these objects are indexed using a set of container-level indexes, a set of group-level indexes, a set of partition-level indexes, or a single scope-level index."/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="DropIndex" name="Drop Index" description="Drops (removes) indexes based on a particular index specification.">
      <ParameterRef id="indexSpecification" description="Name of the index specification on which the indexes are based."/>
      <ParameterRef id="objectPlacer" optional="true" default=""
                    description="Drops only the indexes that include objects placed by placerName. If omitted, drops all indexes based on indexSpec at the specified level."/>
      <ParameterRef id="level" optional="true" default="container" description="Level (container, group, partition, or scope) of indexes to be dropped. If omitted, container-level indexes are dropped."/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="ListIndexes" name="List Indexes" 
                   description="Lists any indexes that have been added to the federated database. An index is indicated by the name of the index specification on which it is based, and the name of each object placer that maintains a scope in which one or more of the indexed objects reside. ">
      <ParameterRef id="outputFormat" optional="true" default="text"/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="CreateContainers" name="Create Containers" 
                   description="Creates and adds containers to the scope of the specified object placer, possibly to particular container groups.  Pre-creating containers can improve the performance of applications.">
      <ParameterRef id="count" optional="false"/>
      <ParameterRef id="modelName" optional="true" hidden="true"/>
      <ParameterRef id="group" description="Object-placer group to which to add containers, designated in the form objectPlacer[::partitionNumber][::groupNumber]. For example, accounts::3 or observations::2::2 "/>
      <ParameterRef id="storageLocation" optional="true" unbounded="true" default="" description="Storage location in which to create the new containers (and any necessary databases); must be registered in the federated database's main storage group (MSG). The format is host::path. Omitting host:: causes the local host to be used, or the host implied by an NFS mount name."/>
      <ParameterRef id="zone" optional="true" unbounded="true" default="" description="Name of a zone in which to create the new containers; must be registered in the federated database's main storage group (MSG)."/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="CreateFd" name="Create FD" 
                   description="Creates a new placement-managed federated database.">
      <ParameterRef id="fdname" optional="false" description="System name for the new federated database."/>
      <ParameterRef id="lockserverhost" optional="true" default=""/>
      <ParameterRef id="fddirhost" optional="true" default=""  description="Host on which the system database file and boot file are created. If omitted, the current host is used."/>
      <ParameterRef id="fddirpath" optional="true" default="" description="Path of the directory in which the system database file and the boot file are created. If omitted, the current directory is used."/>
      <ParameterRef id="jnldirhost" optional="true" default=""/>
      <ParameterRef id="jnldirpath" optional="true" default=""/>
      <ParameterRef id="licensefile" optional="true" default=""/>
      <ParameterRef id="pagesize" optional="true" default="8192" hidden="true"/>
      <ParameterRef id="standalone" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParametersNoBoot"/>
    </Specification>
    <Specification id="DeleteFd" name="Delete FD" description="Deletes the specified federated database and removes its files from the file system.">
      <ParameterRef id="standalone" optional="true" default="false"
                    description="Non-concurrent mode. Use this option only if the lock server for the specified federated database is stopped. If the lock server is running, the tool reports an error and terminates."/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="ExportSchema" name="Export Schema"
                   description="Creates an XML document representing the schema of the federated database.">
      <ParameterRef id="outfile" optional="false"
                    description="Name of the file in which to write the exported XML document; you may optionally include a path to an existing directory. You can omit the .xml filename extension, which is added automatically."/>
      <ParameterRef id="overwrite" optional="true"/>
      <ParameterRef id="standalone" optional="true" hidden="true"/>
      <ParameterRef id="includesystemdefined" optional="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="ExportData" name="Export Data"
                   description="Creates an XML document representing some or all of the persistent objects in the federated database.">
      <ParameterRef id="outfile" optional="false"
                    description="Base name of the XML file(s) to generate."/>
      <ParameterRef id="overwrite" optional="true"
                    description="Overwrite existing file(s), if any."/>
      <ParameterRef id="standalone" optional="true" hidden="true"/>
      <ParameterRef id="class" optional="true" default="ooObj"
                    description="Class name of the objects to export. If omitted, persistent objects of all classes are exported."/>
      <ParameterRef id="predicate" optional="true" default=""
                    description="Predicate that exported objects must satify."/>
      <ParameterRef id="verbose" optional="true"/>
      <ParameterRef id="stoponerror" optional="true"/>
      <ParameterRef id="nowhitespace" optional="true"/>
      <ParameterRef id="shortnames" optional="true"/>
      <ParameterRef id="compress" optional="true"/>
      <ParameterRef id="maxfilesize" optional="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="ImportSchema" name="Import Schema"
                   description="Populates the federated database with the schema represented in the specified XML document.">
      <ParameterRef id="infile" optional="false" description="Name of the file containing the XML document to import, optionally including a path to its directory."/>
      <ParameterRef id="standalone" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
    <Specification id="ImportData" name="Import Data"
                   description="Populates the federated database with the persistent objects represented in the specified XML document.">
      <ParameterRef id="infile" optional="false" description="Name of the file containing the XML document to import, optionally including a path to its directory."/>
      <ParameterRef id="standalone" optional="true" hidden="true"/>
      <GroupRef id="StandardToolParameters"/>
    </Specification>
  </Specifications>
</os:ConfigurationRegistry>
