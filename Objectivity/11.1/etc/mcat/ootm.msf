$quote "
$set 1
1101 "Out of Memory"
1109 "Attempt to access schema before it has been loaded"
1110 "otmSchemaUnlock was called more times that \
otmSchemaLock"
1112 "Unknown machine type passed to otmConvert"
1113 "No entry for type number in schema"
1123 "Version incompatibility: This program uses Type \
Manager Version %d,\n\tbut the Federated Database was \
written using Version %d"
1127 "Error in initializing Type Manager: %s"
1128 "The schema has been protected from any access \
or modification"
1137 "Type %d on architecture '%s' is %d bytes,\n\t\
which is larger than the allocated database space of %d bytes"

$ *** 1700-1750==> OODDLFE
1700 "%s: The flag \"%s%s\" is not recognized by this application."
1701 "%s: The DDL file \"%s\" does not exist. Processing Terminated."

$set 2
1000 "Unresolved forward structure reference:\n\t\
No definition was ever given for %s %s"
1001 "Unresolved forward structure reference:\n\t\
No definition was given for the reference\n\t\
to %s %s at %s, line %d"
1002 "Error: %s is a recursive data structure (contains itself \
directly or indirectly)"
1003 "Error with %s %s: \n\t\
Sorry: Cannot currently handle structures with virtual base classes"
1004 "Cannot handle %s %s:\n\t\
Sorry: Currently unable to compute the size of structures\n\t\
with virtual base classes"
1006 "Error: Recursive type structure (contains itself directly or indirectly)"
1011 "Cannot compute the size of the struct  '%s'; it has yet \
to be defined"
1012 "Sorry: Cannot compute the size of structures with \
bit fields"
1026 "Inconsistent redefinition of %s\n\t\
internal type %s: The association %s is missing"
1027 "Inconsistent redefinition of %s\n\t\
internal type %s: The association %s is missing"
1028 "Malformed line"
1029 "The up_down flag must be either 0 or 1, not %d\n"
1050 "Class found with class number. You cannot assign another number."
1051 "You gave a class number (%d) that is too large."
1052 "Unions are not allowed to have base classes"
1053 "A base class cannot be declared protected"
1054 "A Base class of a derived class must be a class or struct\n\tor \
a typedef to a plain class or struct"
1055 "A Base class of a derived class must be class or struct"
1056 "%s : undefined class"
1057 "You are not allowed to create derived classes of ooDBObj"
1058 "You are not allowed to create derived classes of ooFDObj"
1059 "Malformed constructor or missing member function name"
1060 "Virtual constructors are not allowed"
1061 "Illegal type modifiers for destructor, only virtual or \
inline are allowed"
1062 "Destructors must be defined on a class, not a %s"
1063 "Destructors must be functions"
1064 "Type modifiers (*,&,[]) are not allowed on destructors"
1065 "Destructors are not allowed to have arguments"
1066 "Destructor's class and scope do not match"
1067 "Destructor of class %s found in class %s\n"
1068 "Redefinition of type %s as enum:\n\t\
it already has been declared as the name of a %s"
1069 "Illegal modifiers on type conversion operator"
1071 "Conversion operators must be functions"
1072 "Type modifiers (*,&,[]) are not allowed on conversion \
operators"
1073 "Type conversion operators are not allowed any arguments"
1074 "Malformed association:\n\tAn association name can not be \
an operator"
1075 "Malformed association:\n\tUnexpected scoped name"
1076 "Malformed association:\n\tNo storage or function specifiers \
are allowed"
1077 "Malformed association:\n\t\
the base type was a %s instead of an ooHandle"
1078 "Malformed association:\n\t\
Unexpected type modifiers on association name %s"
1079 "Malformed association: %s found intead of an ooHandle"
1081 "Associations to Databases\n\t\
or Federated Databases are not allowed"
1082 "No field name for ooRef or ooShortRef"
1083 "Malformed ooRef:\n\tthe base type was a %s"
1085 "Field '%s' is an ooRef/ooShortRef,\n\t\
but you did not use a '-ref' flag on the command line."
1086 "Associations may only be defined as fields of \
persistent objects"
1087 "One-to-many and one-to-one associations\n\t\
cannot be declared version(copy)"
1088 "One-to-many and one-to-one associations\n\t\
cannot be declared copy(copy)"
1089 "You may only have associations between non-simple \
persistent objects"
1090 "Inconsistent association:\n\t\
Association %s is declared %s to %s,\n\t\
while the declared inverse of the association (%s::%s)\n\t\
is declared %s to %s"
1091 "Inconsistent association:\n\t\
The declared inverse of the association %s::%s\n\t\
(%s::%s) doesn't exist"
1092 "Inconsistent association:\n\t\
The declared inverse of the association %s::%s\n\t\
(%s::%s) isn't an association"
1093 "Processing association %s::%s,\n\t\
Inverse %s::%s is an association but\n\t\
inverse_field->desc.assoc_desc is null\n"
1094 "You assigned association number %d to\n\t\
%s::%s, but the inverse association\n\t\
%s::%s already has a number."
1095 "Inconsistent association:\n\t\
Association %s::%s's declared inverse (%s::%s)\n\t\
declares its inverse to be %s::%s"
1096 "Inconsistent association:\n\t\
Association %s is declared %s to %s,\n\t\
while the declared inverse of the association (%s::%s)\n\t\
is declared %s to %s"
1097 "Inconsistent forward association name vs. descriptor for %s"
1098 "Class '%s'\n\t\
specifies a base class with virtual functions following\n\t\
a base class without virtual functions and can not be used\n\t\
persistently in an IBM 'xlc' environment"
1099 "Class '%s' must be persistent because\n\t\
some other class references it by association or ooRef"
1160 "Persistent structures or their substructures\n\t\
cannot contain unions"
1161 "Persistent structures or their substructures\n\t\
cannot contain bit fields"
1162 "Persistent structures or their substructures\n\t\
cannot contain other persistent objects"
1163 "Persistent structures or their substructures\n\t\
cannot contain handles"
1164 "Persistent structures or their substructures\n\t\
cannot contain varrays of: types with handles, persistent types,\n\t\
types with varrays, types with unions, or types with bit fields"
1165 "Bad field '%s': either every sub-object of the\n\t\
persistent class '%s' must have a default constructor or\n\t\
'%s' itself must have a '%s::%s(ooInternalObj)' constructor"
1166 "Superclass '%s' constructor error:\n\t\
either every superclass of the persistent class '%s'\n\t\
must have a defaultconstructor or '%s' itself must have\n\t\
a '%s::%s(ooInternalObj)' constructor"
1167 "The persistent class %s or one of its\n\t\
substructures contains a VArray of a class %s\n\t\
(line %d in %s) which does not have a default constructor"
1168 "The association %s\n\t\
points to a non-persistent type\n"
1180 "Association '%s' changed from 'one' to 'many' or vice versa."
1181 "Versioning behavior changed on association '%s'."
1182 "Propagation behavior changed on association '%s'."
1183 "Inhibition behavior changed on association '%s'."
1184 "It is a different class"
1185 "It is no longer an %s"
1186 "Illegal %s %s(%s):\n\t\
%ss are only allowed of persistent types"
1187 "The base type of the %s has changed from %s to %s"
1188 "The base type of the %s has changed:\n\t"
1189 "Class '%s': association change is invalid:\n\t%s"
1190 "Class '%s': association change is invalid:\n\t%s"
1191 "Class '%s' has changed"
1192 "Class '%s' has changed:\n\t"
1193 "'Undefined' schema class '%s' has physical fields."
1194 "Class '%s' has changed:\n\tNew field '%s' has been added"
1195 "The implicit typedef '%s' has changed"
1196 "Typedef '%s' has changed"
1197 "Illegal redefinition: '%s' is already\n\t\
defined in the schema as a %s"
1198 "The implicit typedef '%s' has been redefined:\n\t"
1199 "Typedef '%s' has been redefined:\n\t"
1200 "Base class '%s' has been added"
1201 "Base class '%s' has been replaced by an unnamed class"
1202 "Unnamed base class has been replaced by '%s'"
1203 "Base class '%s' has been replaced by '%s'"
1204 "Base class '%s' has changed:\n\t"
1205 "A base class has been deleted"
1206 "Field '%s' has been deleted"
1207 "Field '%s' has changed from a simple field to a %s"
1208 "Field '%s' has changed:\n\t"
1209 "Name of field '%s' seems to have changed to '%s'."
1210 "VArray '%s' has been deleted"
1211 "Type of field '%s' has changed from a VArray"
1212 "LVArray '%s' has been deleted"
1213 "Name of VArray '%s' seems to have changed to '%s'."
1214 "Base type of VArray '%s' has changed:\n\t"
1215 "The base type has changed:\n\t"
1216 "The type has different type modifiers:\n\t"
1217 "The type has lost some type modifiers"
1218 "The type has gained some type modifiers"
1219 "It is no longer a char"
1220 "It has changed from unsigned to signed"
1221 "It has changed from signed to unsigned"
1222 "It is no longer an integer"
1223 "It is no longer a short"
1224 "It has changed from unsigned to signed"
1225 "It has changed from signed to unsigned"
1226 "It is no longer an integer"
1227 "It has changed from int to short"
1228 "It has changed from unsigned to signed"
1229 "It has changed from signed to unsigned"
1230 "It is no longer a float"
1231 "It is no longer a double"
1232 "It is no longer void"
1233 "It is no longer an enum"
1234 "It is a different enum"
1235 "It is no longer a union"
1236 "It is a different union"
1237 "It is no longer a typedef"
1238 "It is a different typedef"
1239 "It is no longer a class"
1240 "A modifier has changed from '*' to '%s'."
1241 "A pointer modifier has become const"
1242 "A pointer modifier is no longer const"
1243 "A pointer modifier has become volatile"
1244 "A pointer modifier is no longer volatile"
1245 "A modifier has changed from '&' to '%s'."
1246 "A reference modifier has become const"
1247 "A reference modifier is no longer const"
1248 "A pointer modifier has become volatile"
1249 "A pointer modifier is no longer volatile"
1250 "A modifier has changed from '[]' to '%s'."
1251 "An array has changed from sized to unsized"
1252 "An array has changed from unsized to sized"
1253 "An array size has changed from %d to %d"
1254 "A modifier has changed from '()' to '%s'."
1255 "A pointer modifier has become const"
1256 "A pointer modifier is no longer const"
1257 "A pointer modifier has become volatile"
1258 "A pointer modifier is no longer volatile"
1259 "Association '%s' needs to be defined"
1260 "The bidirectional association '%s' has\n\t\
been changed into a %s"
1261 "Association '%s' has been modified"
1262 "Association '%s' has been modified"
1263 "Association '%s' has been deleted"
1264 "The unidirectional association '%s' has\n\t\
been changed into a %s"
1265 "Association '%s' has been modified"
1295 "The specified Federated Database\n\t\
already contains one or more Databases, so %%delete is not allowed"
1296 "Cannot %%delete class '%s':\n\t\
one or more classes are inherited from it"
1297 "One or more classes in the schema\n\t\
are still associated to '%s'"
1298 "Attempt to process %%delete request for unnamed class"
1299 "Class '%s'\n\t\
is not defined in the schema; %%delete request ignored"
1300 "Illegal %%delete request:\n\t\
'%s' is defined in the schema as a %s,\n\t\
not as a class or struct"
1301 "Class '%s'\n\t\
is marked as 'undefined' in the schema; %%delete request ignored"
1302 "Class '%s' is an\n\t\
%s internal type; %%delete request ignored"
1303 "\t\tFound uni-assoc %s::%s to this class\n"
1320 "Warning: "
1321 "Error: "
1322 "Cannot recover, exiting.\n"
1323 "FATAL ERROR: Unable to format an error message"
1324 "<unknown> (uninitialized message; contact %s support)"
1336 "Usage: %s [-n] [-L] [-t] fd_name\n\n"
1337 "Use this program to check that all associations in the \
schema of a Federated\nDatabase are completely defined.\n\n"
1338 "Flags:\n\t-n\tShow association numbers.\n\t-L\tDo not call \
the lock server.\n\t-t\tShow results in table form with no explanations.\n\n"
1339 "The fdSys name given must be the name of a valid Bootstrap \
File.\n\n"
1340 "Cannot find or open Federated Database as specified."
1341 "Cannot open Federated Database as named in the Bootstrap File you specified"
1342 "Panic: Cannot open schema"
1343 "\n\nChecking schema '%s'\n\n"
1344 "One or more association errors found.\nYou need to remove \
and rebuild this entire schema.\n"
1400 "Attempt to initialize non-existent type number %d. \
Perhaps you are attempting to run this application on a \
different Federated Database than the one it was compiled a against? \
If so, you must recompile the generated '.C' files and relink the \
application.  See the documentation for details"
1460 "Cannot open the Federated Database Bootstrap File '%s':\n\t"
1461 "The -b flag can only be used with the -H flag"
1462 "The -C flag can only be used with the -H flag"
1463 "Unrecoverable syntax error\n"
1464 "%d warnings, %d errors\n"
1465 "Cannot open the %s: "
1475 "Typedef statements may not have initializers"
1476 "Invalid variable name: %s::%s"
1477 "Operators cannot be declared as typedef names"
1478 "Incompatible redefinition of typedef %s"
1480 "%s for class %s declared as a member for class %s"
1481 "Inconsistent association:\n\tIn class %s,\n    \
the inverse of association %s<->%s was not declared"
1482 "Empty declaration (no typedef, variable, or \
function name given)"
1483 "Invalid formal parameter name: %s::%s"
1484 "Operators may not be used parameter names"
1485 "Enumerated types may not be friends"
1486 "%s's may not be declared as friends"
1487 "Malformed bit field"
1488 "Fields must have an explicit type"
1489 "Virtual constructors are not allowed" 
1490 "Inline code given for non-function member"
1491 "Initialization is not supported for member fields"
1492 "Static bit fields are not allowed"
1493 "Unexpected field or method declaration\n\t'%s::%s' \
found in class '%s'"
1494 "Unexpected operator declaration  for\n\tclass '%s' \
found in class '%s'"
1495 "Only initialization to 0 is allowed for member functions"
1496 "Initializers are not allowed for non-virtual functions"
1497 "Friend declaration of unknown class %s\n\tinserting \
missing forward declaration of `class %s`"
1498 "Only functions and classes may be declared as friends"
1499 "Non-virtual functions cannot be pure virtual"
1500 "Non-member functions cannot be pure virtual"
1501 "Illegal conversion operator declaration:\n\tThe \
type specification is not allowed to be a definition"
1502 "Illegal conversion operator declaration:\n\tStorage \
class declarations are not allowed in the type specification"
1503 "Illegal conversion operator declaration:\n\tVirtual, \
friend, or inline declarations\n\tare not allowed in the \
type specification"
1510 "Variables cannot be declared both %s and %s"
1511 "Variables cannot be declared both %s and %s"
1512 "The unsigned modifier can only be used once in \
a declaration"
1513 "Variables cannot be declared both signed and unsigned"
1514 "The signed modifier can only be used once in a declaration"
1515 "Variables cannot be declared both signed and unsigned"
1516 "The const modifier can only be used once in a declaration"
1517 "The volatile modifier can only be used once in \
a declaration"
1518 "The readonly modifier can only be used once in \
a declaration"
1519 "The noshare modifier can only be used once in \
a declaration"
1520 "The virtual modifier can only be used once in a declaration"
1521 "The inline modifier can only be used once in a declaration"
1522 "The friend modifier can only be used once in a declaration"
1523 "The modifier %s can only be used on ints"
1524 "Only integral types may be declared unsigned or signed"
1525 "The const modifiers can only be used once in a declaration"
1526 "The volatile modifiers can only be used once in \
a declaration"
1527 "Variables cannot be declared both %s and %s"
1528 "Variables cannot be declared both %s and %s"
1529 "The const modifier can only be used once in a declaration"
1530 "The volatile modifier can only be used once in \
a declaration"
1531 "The noshare modifier can only be used once in \
a declaration"
1532 "The readonly modifier can only be used once in \
a declaration"
1533 "The virtual modifier can only be used once in \
a declaration"
1534 "The inline modifier can only be used once in \
a declaration"
1535 "The friend modifier can only be used once in \
a declaration"
1536 "The unsigned modifier can only be used once in \
a declaration"
1537 "Variables cannot be declared both signed and unsigned"
1538 "The signed modifier can only be used once in \
a declaration"
1539 "Variables cannot be declared both signed and unsigned"
1540 "Panic: unknown specifier type to add_spec: %d"
1545 "Due to errors, update of the database schema has \
been suppressed\n"
1546 "Cannot open existing Federated Database %s\n"
1547 "Cannot create new Federated Database %s\n"
1548 "Cannot open the Federated Database %s\n"
1549 "Cannot get a lock on the schema"
1550 "Error in comparing class '%s' with existing types:\n\t%s"
1551 "Class '%s' must be persistent\n\tbecause some other \
class references it by handle or OID"
1552 "Type modification is not allowed:\n    %s"
1553 "Illegal redefinition: '%s' is already\n\tdefined \
in the schema as a %s"
1554 "You cannot give type number %d (0x%08x) to this \
class;\n\tIt has already been assigned type number %d (0x%08x).")
1555 "Inconsistent association:\n\tClass %s did not declare \
the inverse of\n\tassociation %s::%s<->%s"
1556 "Bit fields are not allowed in persistent \
objects\n\tor in elements of VArrays"
1557 "Unions are not allowed as sub-structures\n\tof \
persistent objects or as elements of VArrays"
1558 "Error in storing %s %s:\n\tSorry: Persistent \
classes currently may not have virtual base classes"
1559 "Error in %s %s:\n\tPersistence must be \
via first inherited class only"
1560 "You declared forward association '%s'\n\t to existing class '%s';\n\t\
remember to re-process class '%s' with the DDL processor."
1561 "You have declared forward association(s);\n\t\
Remember to process class '%s' with the DDL processor\n\t\
before using association(s) to it."
1562 "Internal error:\n\tCould not obtain update access\
 to class to add association"
1563 "Unions are not allowed as sub-structures\n\tof \
persistent objects or as elements of VArrays"
1564 "Union %s has already been defined\n\t in the schema.  \
The schema definition will be overwritten."
1565 "Sorry, persistent structures are not currently\
\n\tallowed to contain VArrays or LVArrays of ooHandles"
1566 "Unions are not allowed as sub-structures\n\tof \
persistent objects or as elements of VArrays"
1567 "Forwarded association '%s'\n\tadded to existing class '%s'"
1568 "Enum %s has already been defined\n\t in the schema.  \
The schema definition will be overwritten."
1569 "Sorry, Type modification is not allowed:\n    %s"
1570 "Error in comparing typedef '%s' with existing \
types:\n\t%s"
1571 "Illegal association to '%s'\n\tthat is already \
defined in the schema as a %s"
1573 "Illegal %s %s(%s):\n\t %ss are only allowed of \
persistent types"
1575 "Class '%s' is not defined as persistent\n\t\
in the schema but should be, because some class defined in this\n\t\
ddl schema file uses it in a way that demands persistence."
1576 "Class %s: Pointers to member functions cannot be used \
as members of persistent classes."
1577 "Class '%s' forward declared persistent.\n\t\
Remember to process its declaration with the DDL processor and\n\t\
include the secondary (_ref.h) header file in your application\n\t\
ahead of the class declaration now being processed."
1578 "Class '%s' assumed to be persistent.\n\t\
Remember to process its declaration with the DDL processor and\n\t\
include the secondary (_ref.h) header file in your application\n\t\
ahead of the class declaration now being processed."
1579 "Pointer or reference to object of type '%s'\n\t\
in a persistent instance of this class refers to memory\n\t\
within a process, and is not valid once process terminates."
1580 "Cannot get a lock on the schema"
1581 "You cannot store a schema using the first stage \
Bootstrap File parser"
1582 "Pointer or reference to function of type '%s'\n\t\
in a persistent instance of this class refers to memory\n\t\
within a process, and is not valid once process terminates."
1585 "Malloc: Out of memory"
1586 "Realloc: Out of memory"
1587 "struct/union members cannot be declared %s"
1590 "%%OODDL-F-ERROR, missing Federated Database Bootstrap File\n"
1591 "%%OODDL-F-ERROR, cannot open Bootstrap File \\"%s\\"
1592 "%%OODDL-F-ERROR, error while processing\n"
1593 "%s \"-I\" %s \"-n\" \"-s\" \"%s\""
1594 " \"-L\""
1595 " \"-A\""
1596 " \"-R\" %s"
1597 " \"-r\" %s"
1598 " \"-N\" %s"
1599 " \"-S\" %s"
1600 " \"-C\" %s \"-H\" %s"
1601 " \"-h\" %s"
1602 "%%OODDL-F-ERROR, Out of memory\n"
1603 "Unable to spawn the command:\n    \\"%s\\"
1604 "The command is longer than the VMS limit of %d\n"
1605 "Please reduce the number of /define or /include \
directives\n"
1606 "%%OODDL-F-ERROR, Unable to spawn the command \"%s\""
1607 "%%OODDL-W-WARNING, Unknown Error\n"
1608 "%%OODDL-F-ERROR, can not access symbol %s\n"
1609 "%%OODDL-W-WARNING, translator symbol has been overridden:\n\t%s == %s\n"
1610 "%%OODDL-F-ERROR, can not define symbol %s\n"
1611 "%%OODDL-W-WARNING, could not delete internally \
created symbol %s:\n\t"
1620 "Type mismatch: %s is a %s, not a enum"
1621 "%s is a undefined enumeration type"
1622 "Divide by zero in constant expression"
1623 "Modulus by zero in constant expression"
1624 "Syntax error:\n\tType name expected but unknown name %s found instead."
1625 "Syntax error:\n\tType name expected but unknown name %s found instead."
1626 "Syntax error:\n\tType name expected but unknown name %s found instead."
1627 "Syntax error:\n\tType name expected but unknown name %s found instead."
1628 "Illegal redefinition of %s as a %s\n\tWas \
originally declared a %s in %s line %d"
1629 "Redeclaration of %s %s as a %s"
1630 "Syntax error:\n\tType name expected but unknown name %s found instead."
1631 "Syntax error:\n\tType name expected but unknown name %s found instead."
1632 "Association number %d is too large"
1633 "Unknown propagate option %s ignored"
1634 "lock inhibiting not supported"
1635 "unlock inhibiting not supported"
1636 "copy inhibiting not supported"
1637 "Unknown inhibit option %s ignored"
1638 "Unknown version option %s ignored"
1639 "Unknown copy option %s ignored"
1640 "Only initialization to 0 is allowed for member functions"
1645 "Comment starting at line %d extended through end of file"
1646 "End of line comment extended through end of file"
1647 "String starting at line %d extended through end of file"
1648 "character constant starting at line %d extended through end of file"
1649 "Unexpected } in inline function"
1650 "Too many }'s in initialization expression"
1651 "Unknown preprocessor control: %s"
1652 "Comment starting at line %d extended through end of file"
1653 "String starting at line %d extended through end of file"
1654 "Too many characters in character constant"
1655 "character constant starting at line %d extended through end of file"
1656 "Illegal character %c(0x%x)"
1657 "Illegal scoped name:\n\t%s is not the name of a class"
1658 "%s is not a class or struct"
1659 "End of file reached while\n\t%s starting at %s, line %d"
1660 "vtable pointer introduced (due to introduction of\n\tclass' first virtual member function)."
1661 "vtable pointer removed (due to removal of class'\n\tlast virtual member function)."

$ *** 1700-1750==> OODDLFE
1700 "C++ DDL Processor Utility"
1701 "C DDL Processor Utility"
1702 "\
Process a %s C++ DDL (Data Definition Language) file. Depending upon the \
options specified, the utility will perform one or more of the following \
actions: 1) load type information into a Federated Database Schema, \
2) generate header and source files necessary for application development, \
3) check the input file for syntactic correctness.\n"
1703 "\
Process a %s C DDL (Data Definition Language) file. Depending upon the \
options specified, the utility will perform one or more of the following \
actions: 1) load type information into a Federated Database Schema, \
2) generate header files necessary for application development, \
3) check the input file for syntactic correctness.\n"
1704 "\
ODB DDL\n\
    [/INCLUDE=(INC_PATH1, INC_PATH2, INC_PATH3...)]\n\
    [/DEFINE=(SYMBOL1, SYMBOL2, SYMBOL3...)]\n\
    [/UNDEFINE=(SYMBOL1, SYMBOL2, SYMBOL3...)]\n\
    [/PREPROCESS_ONLY]\n\
    [/PREFIX=prefix]\n\
    [/FILE_TO_INCLUDE=fileName]\n\
    [/IFDEF=protectName]\n\
    [/SCHEMA=schemaName]\n\
    [/LOADONLY]\n\
    [/SYNTAXONLY]\n\
    [/LINENUMBERS]\n\
    [/UPDATE]\n\
    [/REF]\n\
    [/POINTER]\n\
    [/WARNING=level]\n\
    [/STANDALONE]\n\
    [/NOTITLE]\n\
    [/HELP]\n\
    ddlFileName.ddl\n\
    [bootFilePath]\n\n"
1705 "\
/INCLUDE  Insert directories into the search path for #include\n\
                    files.\n\
/DEFINE             Define symbols as if by a #define in the program source.\n\
/UNDEFINE           Remove any initial definition of a symbol predefined by\n\
                    a preprocessor.\n\
/PREPROCESS_ONLY    Print the results of preprocessing to a text file with\n\
                    the file extension of \".i\". No further processing\n\
                    is performed.\n\
/PREFIX=prefix      Causes output files to be named prefix.C and prefix.h\n\
/FILE_TO_INCLUDE=   The value fileName is the name of the header file to\n\
  fileName          include in the output .C file. The default is to use\n\
                    the name of the output .h file.\n\
/IFDEF=protectName  To protect the output .h file from being included\n\
                    multiple times, the contents of the output .h are\n\
                    enclosed by:\n\
                           #ifndef protectName\n\
                           #define protectName\n\
                           /* Contents of the .h file */\n\
                           #endif\n\
                    If you do not use this flag, then a value based upon\n\
                    the output .h file name is used.\n\
/SCHEMA=schemaName  Specifies the default schema for user class operations.\n\
                    This can be overridden with the %%schema pragma in the\n\
                    ddl file.\n\
/LOADONLY           Load the Federated Database schema without producing a\n\
                    .h or .C file.\n\
/SYNTAXONLY         Only perform a syntax check of the input DDL file.\n"
1706 "\
/UPDATE             Class definitions in the schema may be updated,\n\
                    producing versioned types. This flag can be\n\
                    overridden with the %%update pragma in the ddl file.\n\
/LINENUMBERS        Generate #line directives in the output files for use\n\
                    with CASE and debugging environments.\n\
/REF                Generate the declarations for Object Reference classes.\n\
/POINTER            Process DDL file as C++ pointer interface by default.\n\
/WARNING=level      Controls warning message output. level may be:\n\
                      0  Print all warning messages. This is the default.\n\
                      1  Suppress all warning messages.\n\
                      2  Suppress only the forwarded association warnings.\n\
/STANDALONE         Run in non-concurrent mode, no Lock Server is required.\n\
                    WARNING - corruption may occur if concurrent access\n\
                    is attempted while any process is using this mode.\n\
/NOTITLE            Don't print the program title banner.\n\
/HELP               Print out a help message and exit.\n\
ddlFileName.ddl     Name of the input DDL file. Must end with the file\n\
                    extension \".ddl\".\n\
bootFilePath        Path to a Boot File for the FD. If not specified, the\n\
                    value of the environment variable ODB$FD_BOOT is used.\n\n\
NOTE: the /INCLUDE, /DEFINE, /UNDEFINE, and /PREPROCESS_ONLY flags\n\
are identical to those used by a standard C preprocessor. When looking at\n\
the output produced via the /PREPROCESS_ONLY flag, you will see the \n\
results of the preprocessing performed by this utility in addition to that\n\
done by a standard C preprocessor.\n\n"
1707 "\
ODB DDL\n\
    [/INCLUDE=(INC_PATH1, INC_PATH2, INC_PATH3...)]\n\
    [/DEFINE=(SYMBOL1, SYMBOL2, SYMBOL3...)]\n\
    [/UNDEFINE=(SYMBOL1, SYMBOL2, SYMBOL3...)]\n\
    [/PREPROCESS_ONLY]\n\
    [/PREFIX=prefix]\n\
    [/FILE_TO_INCLUDE=fileName]\n\
    [/IFDEF=protectName]\n\
    [/SCHEMA=schemaName]\n\
    [/LOADONLY\n\
    [/SYNTAXONLY]\n\
    [/UPDATE]\n\
    [/LINENUMBERS]\n\
    [/REF]\n\
    [/POINTER]\n\
    [/WARNING=level]\n\
    [/BUILTIN]\n\
    [/VERBOSE]\n\
    [/OOD=arg]\n\
    [/OOD2=arg]\n\
    [/OOTMI=arg]\n\
    [/OOFLAG=arg]\n\
    [/OON]\n\
    [/STANDALONE]\n\
    [/NOTITLE]\n\
    [/HELP]\n\
    ddlFileName.ddl\n\
    [bootFilePath]\n\n"
1708 "\
/INCLUDE            Insert directories into the search path for #include\n\
                    files.\n\
/DEFINE             Define symbols as if by a #define in the program source.\n\
/UNDEFINE           Remove any initial definition of a symbol predefined by\n\
                    a preprocessor.\n\
/PREPROCESS_ONLY    Print the results of preprocessing to a text file with\n\
                    the file extension of \".i\". No further processing\n\
                    is performed.\n\
/PREFIX=prefix      Causes output files to be named prefix.C and prefix.h\n\
/FILE_TO_INCLUDE=   The value fileName is the name of the header file to\n\
  fileName          include in the output .C file. The default is to use\n\
                    the name of the output .h file.\n\
/IFDEF=protectName  To protect the output .h file from being included\n\
                    multiple times, the contents of the output .h are\n\
                    enclosed by:\n\
                           #ifndef protectName\n\
                           #define protectName\n\
                           /* Contents of the .h file */\n\
                           #endif\n\
                    If you do not use this flag, then a value based upon\n\
                    the output .h file name is used.\n\
/SCHEMA=schemaName  Specifies the default schema for user class operations.\n\
                    This can be overridden with the %%schema pragma in the\n\
                    ddl file.\n\
/LOADONLY           Load the Federated Database schema without producing a\n\
                    .h or .C file.\n\
/SYNTAXONLY         Only perform a syntax check of the input DDL file.\n"
1709 "\
/UPDATE             Class definitions in the schema may be updated,\n\
                    producing versioned types. This flag can be overridden\n\
                    with the %%update pragma in the ddl file.\n\
/LINENUMBERS        Generate #line directives in the output files for use\n\
                    with CASE and debugging environments.\n\
/REF                Generate the declarations for Object Reference classes.\n\
/POINTER            Process DDL file as C++ pointer interface by default.\n\
/WARNING=level      Controls warning message output. level may be:\n\
                      0  Print all warning messages. This is the default.\n\
                      1  Suppress all warning messages.\n\
                      2  Suppress only the forwarded association warnings.\n\
/BUILTIN            Causes static initializers for in-memory schema to be\n\
                    dropped into the generated .C file.\n\
/VERBOSE            Show commands that are being executed.\n\
/OOD=arg            Development debug flag.\n\
/OOD2=arg           Development debug flag.\n\
/OOTMI=arg          Development debug flag.\n\
/OOFLAG=arg         Pass arg to boot.\n\
/OON                Show what the utility would do, do not take any action.\n\
/STANDALONE         Run in non-concurrent mode, no Lock Server is required.\n\
                    WARNING - corruption may occur if concurrent access\n\
                    is attempted while any process is using this mode.\n\
/NOTITLE            Don't print the program title banner.\n\
/HELP               Print out a help message and exit.\n\
ddlFileName.ddl     Name of the input DDL file. Must end with the file\n\
                    extension \".ddl\".\n\
bootFilePath        Path to a Boot File for the FD. If not specified, the\n\
                    value of the environment variable ODB$FD_BOOT is used.\n\n\
NOTE: the /INCLUDE, /DEFINE, /UNDEFINE, and /PREPROCESS_ONLY flags\n\
are identical to those used by a standard C preprocessor. When looking at\n\
the output produced via the /PREPROCESS_ONLY flag, you will see the \n\
results of the preprocessing performed by this utility in addition to that\n\
done by a standard C preprocessor.\n\n"
1710 "\
%s\n\
    [-Idirectory]*\n\
    [-Dname=def]*\n\
    [-Uname]*\n\
    [-B]\n\
    [-E]\n\
    [-cpp cppArg]\n\
    [-prefix prefix]\n\
    [-include fileName]\n\
    [-ifdef protectName]\n\
    [-schema schemaName]\n\
    [-loadonly]\n\
    [-syntaxonly]\n\
    [-compare]\n\
    [-update]\n\
    [-linenumbers]\n\
    [-ref]\n\
    [-pointer]\n\
    [-warning level]\n\
    [-standalone]\n\
    [-notitle]\n\
    [-help]\n\
    ddlFileName.ddl\n\
    [bootFilePath]\n\n"
1711 "\
-Idirectory         Insert directory into the search path for #include\n\
                    files.\n\
-Dname=def          Equivalent to the following line in the program source:\n\
                    #define name def\n\
-Uname              Remove any initial definition of name, where name is a\n\
                    symbol predefined by a preprocessor.\n\
-B                  Support the C++ comment syntax // (only required for\n\
                    some C preprocessors; check the documentation for your\n\
                    C preprocessor to see if you need to use this flag).\n\
-E                  Print the results of preprocessing on standard output,\n\
                    no further processing is performed.\n\
-cpp cppArg         The value cppArg is passed to the C language\n\
                    preprocessor.\n\
-prefix prefix      Causes output files to be named prefix.C and prefix.h\n\
-include fileName   The value fileName is the name of the header file to\n\
                    include in the output .C file. The default is to use\n\
                    the name of the output .h file.\n\
-ifdef protectName  To protect the output .h file from being included\n\
                    multiple times, the contents of the output .h are\n\
                    enclosed by:\n\
                           #ifndef protectName\n\
                           #define protectName\n\
                           /* Contents of the .h file */\n\
                           #endif\n\
                    If you do not use this flag, then a value based upon\n\
                    the output .h file name is used.\n\
-schema schemaName  Specifies the default schema for user class operations.\n\
                    This can be overridden with the %%schema pragma in the\n\
                    ddl file.\n\
-loadonly           Load the Federated Database schema without producing a\n\
                    .h or .C file.\n\
-syntaxonly         Only perform a syntax check of the input DDL file.\n\
-compare            Write the output .h and .C files only if they are\n\
                    different than any existing .h and .C files with the\n\
                    same name.\n"
1712 "\
-compare            Write the output .h and .C files only if they are\n\
                    different than any existing .h and .C files with the\n\
                    same name.\n\
-update             Class definitions in the schema may be updated,\n\
                    producing versioned types. This flag can be\n\
                    overridden with the %%update pragma in the ddl file.\n\
-linenumbers        Generate #line directives in the output files for use\n\
                    with CASE and debugging environments.\n\
-ref                Generate the declarations for Object Reference classes.\n\
-pointer            Process DDL file as C++ pointer interface by default.\n\
-warning level      Controls warning message output. level may be:\n\
                      0  Print all warning messages. This is the default.\n\
                      1  Suppress all warning messages.\n\
                      2  Suppress only the forwarded association warnings.\n\
-standalone         Run in non-concurrent mode, no Lock Server is required.\n\
                    WARNING - corruption may occur if concurrent access\n\
                    is attempted while any process is using this mode.\n\
-notitle            Don't print the program title banner.\n\
-help               Print out a help message and exit.\n\
ddlFileName.ddl     Name of the input DDL file. Must end with the file\n\
                    extension \".ddl\".\n\
bootFilePath        Path to a Boot File for the FD. If not specified, the\n\
                    value of the environment variable OO_FD_BOOT is used.\n\n\
NOTE: the -I, -D, -U, and -E flags are identical to those used by a standard\n\
C preprocessor. When looking at the output produced via the -E flag, you\n\
will see the results of the preprocessing performed by this utility in\n\
addition to that done by a standard C preprocessor.\n\n"
1713 "\
%s\n\
    [-Idirectory]*\n\
    [-Dname=def]*\n\
    [-Uname]*\n\
    [-B]\n\
    [-E]\n\
    [-cpp cppArg]\n\
    [-prefix prefix]\n\
    [-include fileName]\n\
    [-ifdef protectName]\n\
    [-schema schemaName]\n\
    [-loadonly]\n\
    [-syntaxonly]\n\
    [-compare]\n\
    [-update]\n\
    [-linenumbers]\n\
    [-ref]\n\
    [-pointer]\n\
    [-warning level]\n\
    [-builtin]\n\
    [-verbose]\n\
    [-ood arg]\n\
    [-ooD arg]\n\
    [-ootmi arg]\n\
    [-ooflag arg]\n\
    [-oon]\n\
    [-standalone]\n\
    [-notitle]\n\
    [-help]\n\
    ddlFileName.ddl\n\
    [bootFilePath]\n\n"
1714 "\
-Idirectory         Insert directory into the search path for #include\n\
                    files.\n\
-Dname=def          Equivalent to the following line in the program source:\n\
                    #define name def\n\
-Uname              Remove any initial definition of name, where name is a\n\
                    symbol predefined by a preprocessor.\n\
-B                  Support the C++ comment syntax // (only required for\n\
                    some C preprocessors; check the documentation for your\n\
                    C preprocessor to see if you need to use this flag).\n\
-E                  Print the results of preprocessing on standard output,\n\
                    no further processing is performed.\n\
-cpp cppArg         The value cppArg is passed to the C language\n\
                    preprocessor.\n\
-prefix prefix      Causes output files to be named prefix.C and prefix.h\n\
-include fileName   The value fileName is the name of the header file to\n\
                    include in the output .C file. The default is to use\n\
                    the name of the output .h file.\n\
-ifdef protectName  To protect the output .h file from being included\n\
                    multiple times, the contents of the output .h are\n\
                    enclosed by:\n\
                           #ifndef protectName\n\
                           #define protectName\n\
                           /* Contents of the .h file */\n\
                           #endif\n\
                    If you do not use this flag, then a value based upon\n\
                    the output .h file name is used.\n\
-schema schemaName  Specifies the default schema for user class operations.\n\
                    This can be overridden with the %%schema pragma in the\n\
                    ddl file.\n\
-loadonly           Load the Federated Database schema without producing a\n\
                    .h or .C file.\n\
-syntaxonly         Only perform a syntax check of the input DDL file.\n\
-compare            Write the output .h and .C files only if they are\n\
                    different than any existing .h and .C files with the\n\
                    same name.\n"
1715 "\
-update             Class definitions in the schema may be updated,\n\
                    producing versioned types. This flag can be\n\
                    overridden with the %%update pragma in the ddl file.\n\
-linenumbers        Generate #line directives in the output files for use\n\
                    with CASE and debugging environments.\n\
-ref                Generate the declarations for Object Reference classes.\n\
-pointer            Process DDL file as C++ pointer interface by default.\n\
-warning level      Controls warning message output. level may be:\n\
                      0  Print all warning messages. This is the default.\n\
                      1  Suppress all warning messages.\n\
                      2  Suppress only the forwarded association warnings.\n\
-builtin            Causes static initializers for in-memory schema to be\n\
                    dropped into the generated .C file.\n\
-verbose            Show commands that are being executed.\n\
-ood arg            Development debug flag.\n\
-ooD arg            Development debug flag.\n\
-ootmi arg          Development debug flag.\n\
-ooflag arg         Pass arg to boot.\n\
-oon                Show what the utility would do, do not take any action.\n\
-standalone         Run in non-concurrent mode, no Lock Server is required.\n\
                    WARNING - corruption may occur if concurrent access\n\
                    is attempted while any process is using this mode.\n\
-notitle            Don't print the program title banner.\n\
-help               Print out a help message and exit.\n\
ddlFileName.ddl     Name of the input DDL file. Must end with the file\n\
                    extension \".ddl\".\n\
bootFilePath        Path to a Boot File for the FD. If not specified, the\n\
                    value of the environment variable OO_FD_BOOT is used.\n\n\
NOTE: the -I, -D, -U, and -E flags are identical to those used by a standard\n\
C preprocessor. When looking at the output produced via the -E flag, you\n\
will see the results of the preprocessing performed by this utility in\n\
addition to that done by a standard C preprocessor.\n\n"
1716 "\
ODB CDDL\n\
    [/INCLUDE=(INC_PATH1, INC_PATH2, INC_PATH3...)]\n\
    [/DEFINE=(SYMBOL1, SYMBOL2, SYMBOL3...)]\n\
    [/UNDEFINE=(SYMBOL1, SYMBOL2, SYMBOL3...)]\n\
    [/PREPROCESS_ONLY]\n\
    [/PREFIX=prefix]\n\
    [/IFDEF=protectName]\n\
    [/SCHEMA=schemaName]\n\
    [/LOADONLY]\n\
    [/SYNTAXONLY]\n\
    [/UPDATE]\n\
    [/LINENUMBERS]\n\
    [/POINTER]\n\
    [/WARNING=level]\n\
    [/STANDALONE]\n\
    [/NOTITLE]\n\
    [/HELP]\n\
    ddlFileName.ddl\n\
    [bootFilePath]\n\n"
1717 "\
/INCLUDE            Insert directories into the search path for #include\n\
                    files.\n\
/DEFINE             Define symbols as if by a #define in the program source.\n\
/UNDEFINE           Remove any initial definition of a symbol predefined by\n\
                    a preprocessor.\n\
/PREPROCESS_ONLY    Print the results of preprocessing to a text file with\n\
                    the file extension of \".i\". No further processing\n\
                    is performed.\n\
/PREFIX=prefix      Causes output file to be named prefix.h\n\
/IFDEF=protectName  To protect the output .h file from being included\n\
                    multiple times, the contents of the output .h are\n\
                    enclosed by:\n\
                           #ifndef protectName\n\
                           #define protectName\n\
                           /* Contents of the .h file */\n\
                           #endif\n\
                    If you do not use this flag, then a value based upon\n\
                    the output .h file name is used.\n\
/SCHEMA=schemaName  Specifies the default schema for user class operations.\n\
                    This can be overridden with the %%schema pragma in the\n\
                    ddl file.\n\
/LOADONLY           Load the Federated Database schema without producing a\n\
                    .h file.\n\
/SYNTAXONLY         Only perform a syntax check of the input DDL file.\n"
1718 "\
/UPDATE             Class definitions in the schema may be updated,\n\
                    producing versioned types. This flag can be overridden\n\
                    with the %%update pragma in the ddl file.\n\
/LINENUMBERS        Generate #line directives in the output files for use\n\
                    with CASE and debugging environments.\n\
/REF                Generate the declarations for Object Reference classes.\n\
/WARNING=level      Controls warning message output. level may be:\n\
                      0  Print all warning messages. This is the default.\n\
                      1  Suppress all warning messages.\n\
                      2  Suppress only the forwarded association warnings.\n\
/STANDALONE         Run in non-concurrent mode, no Lock Server is required.\n\
                    WARNING - corruption may occur if concurrent access\n\
                    is attempted while any process is using this mode.\n\
/NOTITLE            Don't print the program title banner.\n\
/HELP               Print out a help message and exit.\n\
ddlFileName.ddl     Name of the input DDL file. Must end with the file\n\
                    extension \".ddl\".\n\
bootFilePath        Path to a Boot File for the FD. If not specified, the\n\
                    value of the environment variable ODB$FD_BOOT is used.\n\n\
NOTE: the /INCLUDE, /DEFINE, /UNDEFINE, and /PREPROCESS_ONLY flags\n\
are identical to those used by a standard C preprocessor. When looking at\n\
the output produced via the /PREPROCESS_ONLY flag, you will see the \n\
results of the preprocessing performed by this utility in addition to that\n\
done by a standard C preprocessor.\n\n"
1719 "\
ODB CDDL\n\
    [/INCLUDE=(INC_PATH1, INC_PATH2, INC_PATH3...)]\n\
    [/DEFINE=(SYMBOL1, SYMBOL2, SYMBOL3...)]\n\
    [/UNDEFINE=(SYMBOL1, SYMBOL2, SYMBOL3...)]\n\
    [/PREPROCESS_ONLY]\n\
    [/PREFIX=prefix]\n\
    [/IFDEF=protectName]\n\
    [/SCHEMA=schemaName]\n\
    [/LOADONLY\n\
    [/SYNTAXONLY]\n\
    [/UPDATE]\n\
    [/LINENUMBERS]\n\
    [/REF]\n\
    [/WARNING=level]\n\
    [/VERBOSE]\n\
    [/OOD=arg]\n\
    [/OOD2=arg]\n\
    [/OOTMI=arg]\n\
    [/OOFLAG=arg]\n\
    [/OON]\n\
    [/STANDALONE]\n\
    [/NOTITLE]\n\
    [/HELP]\n\
    ddlFileName.ddl\n\
    [bootFilePath]\n\n"
1720 "\
/INCLUDE            Insert directories into the search path for #include\n\
                    files.\n\
/DEFINE             Define symbols as if by a #define in the program source.\n\
/UNDEFINE           Remove any initial definition of a symbol predefined by\n\
                    a preprocessor.\n\
/PREPROCESS_ONLY    Print the results of preprocessing to a text file with\n\
                    the file extension of \".i\". No further processing\n\
                    is performed.\n\
/PREFIX=prefix      Causes output file to be named prefix.h\n\
/IFDEF=protectName  To protect the output .h file from being included\n\
                    multiple times, the contents of the output .h are\n\
                    enclosed by:\n\
                           #ifndef protectName\n\
                           #define protectName\n\
                           /* Contents of the .h file */\n\
                           #endif\n\
                    If you do not use this flag, then a value based upon\n\
                    the output .h file name is used.\n\
/SCHEMA=schemaName  Specifies the default schema for user class operations.\n\
                    This can be overridden with the %%schema pragma in the\n\
                    ddl file.\n\
/LOADONLY           Load the Federated Database schema without producing a\n\
                    .h file.\n\
/SYNTAXONLY         Only perform a syntax check of the input DDL file.\n"
1721 "\
/UPDATE             Class definitions in the schema may be updated,\n\
                    producing versioned types. This flag can be overridden\n\
                    with the %%update pragma in the ddl file.\n\
/LINENUMBERS        Generate #line directives in the output files for use\n\
                    with CASE and debugging environments.\n\
/REF                Generate the declarations for Object Reference classes.\n\
/WARNING=level      Controls warning message output. level may be:\n\
                      0  Print all warning messages. This is the default.\n\
                      1  Suppress all warning messages.\n\
                      2  Suppress only the forwarded association warnings.\n\
/VERBOSE            Show commands that are being executed.\n\
/OOD=arg            Development debug flag.\n\
/OOD2=arg           Development debug flag.\n\
/OOTMI=arg          Development debug flag.\n\
/OOFLAG=arg         Pass arg to boot.\n\
/OON                Show what the utility would do, do not take any action.\n\
/STANDALONE         Run in non-concurrent mode, no Lock Server is required.\n\
                    WARNING - corruption may occur if concurrent access\n\
                    is attempted while any process is using this mode.\n\
/NOTITLE            Don't print the program title banner.\n\
/HELP               Print out a help message and exit.\n\
ddlFileName.ddl     Name of the input DDL file. Must end with the file\n\
                    extension \".ddl\".\n\
bootFilePath        Path to a Boot File for the FD. If not specified, the\n\
                    value of the environment variable ODB$FD_BOOT is used.\n\n\
NOTE: the -I, -D, -U, and -E flags are identical to those used by a standard\n\
C preprocessor. When looking at the output produced via the -E flag, you\n\
will see the results of the preprocessing performed by this utility in\n\
addition to that done by a standard C preprocessor.\n\n"
1722 "\
%s\n\
    [-Idirectory]*\n\
    [-Dname=def]*\n\
    [-Uname]*\n\
    [-B]\n\
    [-E]\n\
    [-cpp cppArg]\n\
    [-prefix prefix]\n\
    [-ifdef protectName]\n\
    [-schema schemaName]\n\
    [-loadonly]\n\
    [-syntaxonly]\n\
    [-compare]\n\
    [-update]\n\
    [-linenumbers]\n\
    [-ref]\n\
    [-warning level]\n\
    [-standalone]\n\
    [-notitle]\n\
    [-help]\n\
    ddlFileName.ddl\n\
    [bootFilePath]\n\n"
1723 "\
-Idirectory         Insert directory into the search path for #include\n\
                    files.\n\
-Dname=def          Equivalent to the following line in the program source:\n\
                    #define name def\n\
-Uname              Remove any initial definition of name, where name is a\n\
                    symbol predefined by a preprocessor.\n\
-B                  Support the C++ comment syntax // (only required for\n\
                    some C preprocessors; check the documentation for your\n\
                    C preprocessor to see if you need to use this flag).\n\
-E                  Print the results of preprocessing on standard output,\n\
                    no further processing is performed.\n\
-cpp cppArg         The value cppArg is passed to the C language\n\
                    preprocessor.\n\
-prefix prefix      Causes output file to be named prefix.h\n\
-ifdef protectName  To protect the output .h file from being included\n\
                    multiple times, the contents of the output .h are\n\
                    enclosed by:\n\
                           #ifndef protectName\n\
                           #define protectName\n\
                           /* Contents of the .h file */\n\
                           #endif\n\
                    If you do not use this flag, then a value based upon\n\
                    the output .h file name is used.\n\
-schema schemaName  Specifies the default schema for user class operations.\n\
                    This can be overridden with the %%schema pragma in the\n\
                    ddl file.\n\
-loadonly           Load the Federated Database schema without producing a\n\
                    .h file.\n\
-syntaxonly         Only perform a syntax check of the input DDL file.\n\
-compare            Write the output .h only if it is different than any\n\
                    existing .h file with the same name.\n"
1724 "\
-update             Class definitions in the schema may be updated,\n\
                    producing versioned types. This flag can be\n\
                    overridden with the %%update pragma in the ddl file.\n\
-linenumbers        Generate #line directives in the output files for use\n\
                    with CASE and debugging environments.\n\
-ref                Generate the declarations for Object Reference classes.\n\
-warning level      Controls warning message output. level may be:\n\
                      0  Print all warning messages. This is the default.\n\
                      1  Suppress all warning messages.\n\
                      2  Suppress only the forwarded association warnings.\n\
-standalone         Run in non-concurrent mode, no Lock Server is required.\n\
                    WARNING - corruption may occur if concurrent access\n\
                    is attempted while any process is using this mode.\n\
-notitle            Don't print the program title banner.\n\
-help               Print out a help message and exit.\n\
ddlFileName.ddl     Name of the input DDL file. Must end with the file\n\
                    extension \".ddl\".\n\
bootFilePath        Path to a Boot File for the FD. If not specified, the\n\
                    value of the environment variable OO_FD_BOOT is used.\n\n\
NOTE: the -I, -D, -U, and -E flags are identical to those used by a standard\n\
C preprocessor. When looking at the output produced via the -E flag, you\n\
will see the results of the preprocessing performed by this utility in\n\
addition to that done by a standard C preprocessor.\n\n"
1725 "\
%s\n\
    [-Idirectory]*\n\
    [-Dname=def]*\n\
    [-Uname]*\n\
    [-B]\n\
    [-E]\n\
    [-cpp cppArg]\n\
    [-prefix prefix]\n\
    [-ifdef protectName]\n\
    [-schema schemaName]\n\
    [-loadonly]\n\
    [-syntaxonly]\n\
    [-compare]\n\
    [-update]\n\
    [-linenumbers]\n\
    [-ref]\n\
    [-warning level]\n\
    [-verbose]\n\
    [-ood arg]\n\
    [-ooD arg]\n\
    [-ootmi arg]\n\
    [-ooflag arg]\n\
    [-oon]\n\
    [-standalone]\n\
    [-notitle]\n\
    [-help]\n\
    ddlFileName.ddl\n\
    [bootFilePath]\n\n"
1726 "\
-Idirectory         Insert directory into the search path for #include\n\
                    files.\n\
-Dname=def          Equivalent to the following line in the program source:\n\
                    #define name def\n\
-Uname              Remove any initial definition of name, where name is a\n\
                    symbol predefined by a preprocessor.\n\
-B                  Support the C++ comment syntax // (only required for\n\
                    some C preprocessors; check the documentation for your\n\
                    C preprocessor to see if you need to use this flag).\n\
-E                  Print the results of preprocessing on standard output,\n\
                    no further processing is performed.\n\
-cpp cppArg         The value cppArg is passed to the C language\n\
                    preprocessor.\n\
-prefix prefix      Causes output files to be named prefix.C and prefix.h\n\
-ifdef protectName  To protect the output .h file from being included\n\
                    multiple times, the contents of the output .h are\n\
                    enclosed by:\n\
                           #ifndef protectName\n\
                           #define protectName\n\
                           /* Contents of the .h file */\n\
                           #endif\n\
                    If you do not use this flag, then a value based upon\n\
                    the output .h file name is used.\n\
-schema schemaName  Specifies the default schema for user class operations.\n\
                    This can be overridden with the %%schema pragma in the\n\
                    ddl file.\n\
-loadonly           Load the Federated Database schema without producing a\n\
                    .h file.\n\
-syntaxonly         Only perform a syntax check of the input DDL file.\n\
-compare            Write the output .h file only it is different than any\n\
                    existing .h file with the same name.\n"
1727 "\
-update             Class definitions in the schema may be updated,\n\
                    producing versioned types. This flag can be\n\
                    overridden with the %%update pragma in the ddl file.\n\
-linenumbers        Generate #line directives in the output files for use\n\
                    with CASE and debugging environments.\n\
-ref                Generate the declarations for Object Reference classes.\n\
-warning level      Controls warning message output. level may be:\n\
                      0  Print all warning messages. This is the default.\n\
                      1  Suppress all warning messages.\n\
                      2  Suppress only the forwarded association warnings.\n\
-verbose            Show commands that are being executed.\n\
-ood arg            Development debug flag.\n\
-ooD arg            Development debug flag.\n\
-ootmi arg          Development debug flag.\n\
-ooflag arg         Pass arg to boot.\n\
-oon                Show what the utility would do, do not take any action.\n\
-standalone         Run in non-concurrent mode, no Lock Server is required.\n\
                    WARNING - corruption may occur if concurrent access\n\
                    is attempted while any process is using this mode.\n\
-notitle            Don't print the program title banner.\n\
-help               Print out a help message and exit.\n\
ddlFileName.ddl     Name of the input DDL file. Must end with the file\n\
                    extension \".ddl\".\n\
bootFilePath        Path to a Boot File for the FD. If not specified, the\n\
                    value of the environment variable OO_FD_BOOT is used.\n\n\
NOTE: the -I, -D, -U, and -E flags are identical to those used by a standard\n\
C preprocessor. When looking at the output produced via the -E flag, you\n\
will see the results of the preprocessing performed by this utility in\n\
addition to that done by a standard C preprocessor.\n\n"




$set 3
1 "ascii"
2 "Version: "





